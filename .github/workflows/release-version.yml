name: Release Version

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., 1.2.3)'
        required: true
        type: string
      next_dev_version:
        description: 'Next development version (e.g., 1.2.4 dev+timestamp will be appended)'
        required: true
        type: string
      dry_run:
        description: 'Perform a dry run (true/false) no commit or pull requests'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Check inut
        run: |
          INPUT_PATTERN="^[0-9]+\.[0-9]+\.[0-9]+$"
          
          RELEASE_VERSION="${{ github.event.inputs.release_version }}"
          if [[ ! $RELEASE_VERSION =~ $INPUT_PATTERN ]]; then
            echo "Invalid input format for release version. Must be in the format 'number.number.number'."
            echo "::error::Invalid input format!"  # Set an error message
            exit 1
          fi

          NEXT_DEV_VERSION=${{ github.event.inputs.next_dev_version }}
          if [[ ! $NEXT_DEV_VERSION =~ $INPUT_PATTERN ]]; then
            echo "Invalid input format for next development version. Must be in the format 'number.number.number'."
            echo "::error::Invalid input format!"  # Set an error message
            exit 1
          fi
          
      - name: Bump version for release
        run: |
          # Extract release version input
          RELEASE_VERSION=${{ github.event.inputs.release_version }}

          # Bump version in setup.py
          echo "Setting release version: ${RELEASE_VERSION}"
          
          sed -i "s/version=.*$/version=\"${RELEASE_VERSION}\",/" setup.py

          # Set Git user details dynamically
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }} (GitHub Action)"

          # Commit changes
          git add setup.py
          if [[ "${{ github.event.inputs.dry_run }}" != "true" ]]; then
            git commit -m "Bump version for release to ${RELEASE_VERSION}"
          fi

      - name: Create pull request
        if: ${{ github.event.inputs.dry_run != 'true' }}
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Bump version for release to ${{ github.event.inputs.release_version }}"
          title: "Bump version for release to ${{ github.event.inputs.release_version }}"
          body: |
            This pull request bumps the version for release.

      - name: Bump version for next development
        run: |
          # Extract next development version input
          NEXT_DEV_VERSION=${{ github.event.inputs.next_dev_version }}

          # Bump version in setup.py
          echo "Setting new dev version: ${NEXT_DEV_VERSION}"
           
          sed -i "s/version=.*$/version=\"${NEXT_DEV_VERSION}\" + version_postfix,/" setup.py

          # Set Git user details dynamically
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }} (GitHub Action)"

          # Commit changes
          git add setup.py
          if [[ "${{ github.event.inputs.dry_run }}" != "true" ]]; then
            git commit -m "Bump version for next development to ${NEXT_DEV_VERSION}"
          fi
